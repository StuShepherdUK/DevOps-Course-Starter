name: Continuous Integration
on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}

jobs:
  build_and_test_docker_and_terraform:
    name: Build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build the docker image
      run: docker build --target test --tag todo-app:test .

    - name: Run the docker test image
      run:  docker run -p 5000:5000 --env-file .env.test todo-app:test

    - uses: hashicorp/setup-terraform@v3
    # Initialize Terraform with an Azure storage account to store the Terraform State
    - name: Terraform Init
      id: init
      run: terraform init



  push_docker_to_prod:
    name: Push To Production
    runs-on: ubuntu-latest
    needs: build_and_test_docker
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Docker Login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - uses: actions/checkout@v4

    - name: Build the production docker image
      run: docker build --target production --tag stushepherd181/my-todo-app:latest .
  
    - name: Run the docker test image
      run:  docker push stushepherd181/my-todo-app:latest

    - name: Trigger Azure Webhook to update site
      run: curl -dH -X POST '${{ secrets.AZURE_WEBHOOK }}'

  # init_and_apply_infrastructure:
  #   name: Terraform Init and Apply
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: hashicorp/setup-terraform@v3




  #   # Run Terraform plan for pull requests only
  #   # - name: Terraform Plan
  #   #   if: github.event_name == 'pull_request'
  #   #   id: plan
  #   #   run: terraform plan -no-color
  
  #   # Run Terraform apply for push to the main branch
  #   # - name: Terraform Apply
  #   #   if: github.ref == 'refs/heads/main' && github.event_name == 'push'
  #   #   run: terraform apply -auto-approve